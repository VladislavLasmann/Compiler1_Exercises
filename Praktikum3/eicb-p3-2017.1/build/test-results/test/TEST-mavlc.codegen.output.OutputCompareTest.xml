<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="mavlc.codegen.output.OutputCompareTest" tests="15" skipped="0" failures="0" errors="0" timestamp="2018-01-25T21:09:22" hostname="seedOS" time="0.195">
  <properties/>
  <testcase name="testExample[foreach2]" classname="mavlc.codegen.output.OutputCompareTest" time="0.117"/>
  <testcase name="testExample[foreach1]" classname="mavlc.codegen.output.OutputCompareTest" time="0.009"/>
  <testcase name="testExample[Switchcase2]" classname="mavlc.codegen.output.OutputCompareTest" time="0.004"/>
  <testcase name="testExample[Switchcase1]" classname="mavlc.codegen.output.OutputCompareTest" time="0.004"/>
  <testcase name="testExample[recordSelect1]" classname="mavlc.codegen.output.OutputCompareTest" time="0.003"/>
  <testcase name="testExample[division01]" classname="mavlc.codegen.output.OutputCompareTest" time="0.004"/>
  <testcase name="testExample[lhs2]" classname="mavlc.codegen.output.OutputCompareTest" time="0.012"/>
  <testcase name="testExample[lhs1]" classname="mavlc.codegen.output.OutputCompareTest" time="0.007"/>
  <testcase name="testExample[Select1]" classname="mavlc.codegen.output.OutputCompareTest" time="0.002"/>
  <testcase name="testExample[foreach3]" classname="mavlc.codegen.output.OutputCompareTest" time="0.005"/>
  <testcase name="testExample[Switchcase3]" classname="mavlc.codegen.output.OutputCompareTest" time="0.002"/>
  <testcase name="testExample[lhs3]" classname="mavlc.codegen.output.OutputCompareTest" time="0.006"/>
  <testcase name="testExample[lhs4]" classname="mavlc.codegen.output.OutputCompareTest" time="0.01"/>
  <testcase name="testExample[lhs5]" classname="mavlc.codegen.output.OutputCompareTest" time="0.003"/>
  <testcase name="testExample[Select2]" classname="mavlc.codegen.output.OutputCompareTest" time="0.001"/>
  <system-out><![CDATA[[src/test/testcases/executables/P3/public/_4_2/foreach2.mavl, src/test/testcases/executables/P3/public/_4_2/foreach1.mavl, src/test/testcases/executables/P3/public/_4_1/Switchcase2.mavl, src/test/testcases/executables/P3/public/_4_1/Switchcase1.mavl, src/test/testcases/executables/P3/public/_3/recordSelect1.mavl, src/test/testcases/executables/P3/public/_1/division01.mavl, src/test/testcases/executables/P3/public/_2/lhs2.mavl, src/test/testcases/executables/P3/public/_2/lhs1.mavl, src/test/testcases/executables/P3/public/_4_3/Select1.mavl, src/test/testcases/executables/P3/onwTests/_4_2/foreach3.mavl, src/test/testcases/executables/P3/onwTests/_4_1/Switchcase3.mavl, src/test/testcases/executables/P3/onwTests/_2/lhs3.mavl, src/test/testcases/executables/P3/onwTests/_2/lhs4.mavl, src/test/testcases/executables/P3/onwTests/_2/lhs5.mavl, src/test/testcases/executables/P3/onwTests/_4_3/Select2.mavl]
src/test/testcases/executables/P3/public/_4_2/foreach2.mavl
src/test/testcases/executables/P3/public/_4_2/foreach2.txt
Compiling file src/test/testcases/executables/P3/public/_4_2/foreach2.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  PUSH        4
0002:  PUSH        1
0003:  LOADL       0
0004:  LOADA       6[LB]
0005:  STOREI(1)   
0006:  LOAD  (4)   2[LB]
0007:  LOADA       -4[ST]
0008:  LOADI (1)   
0009:  LOADA       0[LB]
000A:  STOREI(1)   
000B:  LOAD  (1)   6[LB]
000C:  LOADA       0[LB]
000D:  STOREI(1)   
000E:  LOAD  (1)   6[LB]
000F:  LOADL       1
0010:  add
0011:  LOADA       6[LB]
0012:  STOREI(1)   
0013:  POP   (0)   0
0014:  LOAD  (1)   0[LB]
0015:  LOADA       2[LB]
0016:  STOREI(1)   
0017:  LOADA       -3[ST]
0018:  LOADI (1)   
0019:  LOADA       0[LB]
001A:  STOREI(1)   
001B:  LOAD  (1)   6[LB]
001C:  LOADA       0[LB]
001D:  STOREI(1)   
001E:  LOAD  (1)   6[LB]
001F:  LOADL       1
0020:  add
0021:  LOADA       6[LB]
0022:  STOREI(1)   
0023:  POP   (0)   0
0024:  LOAD  (1)   0[LB]
0025:  LOADA       3[LB]
0026:  STOREI(1)   
0027:  LOADA       -2[ST]
0028:  LOADI (1)   
0029:  LOADA       0[LB]
002A:  STOREI(1)   
002B:  LOAD  (1)   6[LB]
002C:  LOADA       0[LB]
002D:  STOREI(1)   
002E:  LOAD  (1)   6[LB]
002F:  LOADL       1
0030:  add
0031:  LOADA       6[LB]
0032:  STOREI(1)   
0033:  POP   (0)   0
0034:  LOAD  (1)   0[LB]
0035:  LOADA       4[LB]
0036:  STOREI(1)   
0037:  LOADA       -1[ST]
0038:  LOADI (1)   
0039:  LOADA       0[LB]
003A:  STOREI(1)   
003B:  LOAD  (1)   6[LB]
003C:  LOADA       0[LB]
003D:  STOREI(1)   
003E:  LOAD  (1)   6[LB]
003F:  LOADL       1
0040:  add
0041:  LOADA       6[LB]
0042:  STOREI(1)   
0043:  POP   (0)   0
0044:  LOAD  (1)   0[LB]
0045:  LOADA       5[LB]
0046:  STOREI(1)   
0047:  POP   (0)   4
0048:  LOAD  (4)   2[LB]
0049:  LOADA       -4[ST]
004A:  LOADL       0
004B:  LOADL       2
004C:  mult
004D:  add
004E:  LOADI (2)   
004F:  POP   (2)   4
0050:  LOADA       -2[ST]
0051:  LOADL       0
0052:  LOADL       1
0053:  mult
0054:  add
0055:  LOADI (1)   
0056:  POP   (1)   2
0057:  CALL  (CB)  32756[CB]	printInt
0058:  LOAD  (4)   2[LB]
0059:  LOADA       -4[ST]
005A:  LOADL       0
005B:  LOADL       2
005C:  mult
005D:  add
005E:  LOADI (2)   
005F:  POP   (2)   4
0060:  LOADA       -2[ST]
0061:  LOADL       1
0062:  LOADL       1
0063:  mult
0064:  add
0065:  LOADI (1)   
0066:  POP   (1)   2
0067:  CALL  (CB)  32756[CB]	printInt
0068:  LOAD  (4)   2[LB]
0069:  LOADA       -4[ST]
006A:  LOADL       1
006B:  LOADL       2
006C:  mult
006D:  add
006E:  LOADI (2)   
006F:  POP   (2)   4
0070:  LOADA       -2[ST]
0071:  LOADL       0
0072:  LOADL       1
0073:  mult
0074:  add
0075:  LOADI (1)   
0076:  POP   (1)   2
0077:  CALL  (CB)  32756[CB]	printInt
0078:  LOAD  (4)   2[LB]
0079:  LOADA       -4[ST]
007A:  LOADL       1
007B:  LOADL       2
007C:  mult
007D:  add
007E:  LOADI (2)   
007F:  POP   (2)   4
0080:  LOADA       -2[ST]
0081:  LOADL       1
0082:  LOADL       1
0083:  mult
0084:  add
0085:  LOADI (1)   
0086:  POP   (1)   2
0087:  CALL  (CB)  32756[CB]	printInt
0088:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/public/_4_2/foreach1.mavl
src/test/testcases/executables/P3/public/_4_2/foreach1.txt
Compiling file src/test/testcases/executables/P3/public/_4_2/foreach1.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  PUSH        3
0002:  LOADL       1
0003:  LOADL       1
0004:  LOADL       1
0005:  add
0006:  LOADL       3
0007:  LOADA       2[LB]
0008:  STOREI(3)   
0009:  LOAD  (3)   2[LB]
000A:  LOADA       -3[ST]
000B:  LOADI (1)   
000C:  LOADA       0[LB]
000D:  STOREI(1)   
000E:  LOADL       3
000F:  LOADA       0[LB]
0010:  STOREI(1)   
0011:  POP   (0)   0
0012:  LOAD  (1)   0[LB]
0013:  LOADA       2[LB]
0014:  STOREI(1)   
0015:  LOADA       -2[ST]
0016:  LOADI (1)   
0017:  LOADA       0[LB]
0018:  STOREI(1)   
0019:  LOADL       3
001A:  LOADA       0[LB]
001B:  STOREI(1)   
001C:  POP   (0)   0
001D:  LOAD  (1)   0[LB]
001E:  LOADA       3[LB]
001F:  STOREI(1)   
0020:  LOADA       -1[ST]
0021:  LOADI (1)   
0022:  LOADA       0[LB]
0023:  STOREI(1)   
0024:  LOADL       3
0025:  LOADA       0[LB]
0026:  STOREI(1)   
0027:  POP   (0)   0
0028:  LOAD  (1)   0[LB]
0029:  LOADA       4[LB]
002A:  STOREI(1)   
002B:  POP   (0)   3
002C:  LOAD  (3)   2[LB]
002D:  LOADA       -3[ST]
002E:  LOADL       0
002F:  LOADL       1
0030:  mult
0031:  add
0032:  LOADI (1)   
0033:  POP   (1)   3
0034:  CALL  (CB)  32756[CB]	printInt
0035:  LOAD  (3)   2[LB]
0036:  LOADA       -3[ST]
0037:  LOADL       1
0038:  LOADL       1
0039:  mult
003A:  add
003B:  LOADI (1)   
003C:  POP   (1)   3
003D:  CALL  (CB)  32756[CB]	printInt
003E:  LOAD  (3)   2[LB]
003F:  LOADA       -3[ST]
0040:  LOADL       2
0041:  LOADL       1
0042:  mult
0043:  add
0044:  LOADI (1)   
0045:  POP   (1)   3
0046:  CALL  (CB)  32756[CB]	printInt
0047:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/public/_4_1/Switchcase2.mavl
src/test/testcases/executables/P3/public/_4_1/Switchcase2.txt
Compiling file src/test/testcases/executables/P3/public/_4_1/Switchcase2.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  PUSH        1
0002:  LOADL       16
0003:  LOADL       20
0004:  sub
0005:  LOADL       -4
0006:  eq
0007:  JUMPIF(0)   12[CB]
0008:  LOADL       27
0009:  LOADA       2[LB]
000A:  STOREI(1)   
000B:  JUMP        15[CB]
000C:  LOADL       10
000D:  LOADA       2[LB]
000E:  STOREI(1)   
000F:  LOAD  (1)   2[LB]
0010:  CALL  (CB)  32756[CB]	printInt
0011:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/public/_4_1/Switchcase1.mavl
src/test/testcases/executables/P3/public/_4_1/Switchcase1.txt
Compiling file src/test/testcases/executables/P3/public/_4_1/Switchcase1.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  LOADL       4
0002:  PUSH        1
0003:  LOAD  (1)   2[LB]
0004:  LOADL       5
0005:  eq
0006:  JUMPIF(0)   11[CB]
0007:  LOADL       7
0008:  LOADA       3[LB]
0009:  STOREI(1)   
000A:  JUMP        -1[CB]
000B:  LOAD  (1)   2[LB]
000C:  LOADL       4
000D:  eq
000E:  JUMPIF(0)   19[CB]
000F:  LOADL       27
0010:  LOADA       3[LB]
0011:  STOREI(1)   
0012:  JUMP        22[CB]
0013:  LOADL       10
0014:  LOADA       3[LB]
0015:  STOREI(1)   
0016:  LOAD  (1)   3[LB]
0017:  CALL  (CB)  32756[CB]	printInt
0018:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/public/_3/recordSelect1.mavl
src/test/testcases/executables/P3/public/_3/recordSelect1.txt
Compiling file src/test/testcases/executables/P3/public/_3/recordSelect1.mavl
.data
0->hello world!
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  LOADL       0
0002:  LOADL       12
0003:  LOAD  (2)   2[LB]
0004:  LOADA       -2[ST]
0005:  LOADL       0
0006:  add
0007:  LOADI (1)   
0008:  POP   (1)   2
0009:  CALL  (CB)  32759[CB]	printString
000A:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/public/_1/division01.mavl
src/test/testcases/executables/P3/public/_1/division01.txt
Compiling file src/test/testcases/executables/P3/public/_1/division01.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  LOADL       1087583027
0002:  LOADL       1074580685
0003:  LOAD  (1)   2[LB]
0004:  LOAD  (1)   3[LB]
0005:  floatDiv
0006:  LOAD  (1)   4[LB]
0007:  CALL  (CB)  32757[CB]	printFloat
0008:  LOADL       6
0009:  LOADL       2
000A:  LOAD  (1)   5[LB]
000B:  LOAD  (1)   6[LB]
000C:  div
000D:  LOAD  (1)   7[LB]
000E:  CALL  (CB)  32756[CB]	printInt
000F:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/public/_2/lhs2.mavl
src/test/testcases/executables/P3/public/_2/lhs2.txt
Compiling file src/test/testcases/executables/P3/public/_2/lhs2.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  PUSH        3
0002:  LOADL       4
0003:  LOADL       0
0004:  LOADA       2[LB]
0005:  add
0006:  STOREI(1)   
0007:  LOADL       17
0008:  LOADL       1
0009:  LOADA       2[LB]
000A:  add
000B:  STOREI(1)   
000C:  LOADL       9
000D:  LOADL       2
000E:  LOADA       2[LB]
000F:  add
0010:  STOREI(1)   
0011:  LOAD  (3)   2[LB]
0012:  LOADA       -3[ST]
0013:  LOADL       0
0014:  LOADL       1
0015:  mult
0016:  add
0017:  LOADI (1)   
0018:  POP   (1)   3
0019:  CALL  (CB)  32756[CB]	printInt
001A:  LOAD  (3)   2[LB]
001B:  LOADA       -3[ST]
001C:  LOADL       1
001D:  LOADL       1
001E:  mult
001F:  add
0020:  LOADI (1)   
0021:  POP   (1)   3
0022:  CALL  (CB)  32756[CB]	printInt
0023:  LOAD  (3)   2[LB]
0024:  LOADA       -3[ST]
0025:  LOADL       2
0026:  LOADL       1
0027:  mult
0028:  add
0029:  LOADI (1)   
002A:  POP   (1)   3
002B:  CALL  (CB)  32756[CB]	printInt
002C:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/public/_2/lhs1.mavl
src/test/testcases/executables/P3/public/_2/lhs1.txt
Compiling file src/test/testcases/executables/P3/public/_2/lhs1.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  PUSH        1
0002:  LOADL       4
0003:  LOADA       2[LB]
0004:  STOREI(1)   
0005:  LOADL       5
0006:  LOADA       2[LB]
0007:  STOREI(1)   
0008:  LOAD  (1)   2[LB]
0009:  CALL  (CB)  32756[CB]	printInt
000A:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/public/_4_3/Select1.mavl
src/test/testcases/executables/P3/public/_4_3/Select1.txt
Compiling file src/test/testcases/executables/P3/public/_4_3/Select1.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  PUSH        1
0002:  PUSH        1
0003:  LOADL       20
0004:  LOADL       10
0005:  LOADA       2[LB]
0006:  STOREI(1)   
0007:  LOAD  (1)   2[LB]
0008:  LOAD  (1)   4[LB]
0009:  gt
000A:  JUMPIF(0)   13[CB]
000B:  LOAD  (1)   2[LB]
000C:  JUMP        14[CB]
000D:  LOAD  (1)   4[LB]
000E:  LOADA       3[LB]
000F:  STOREI(1)   
0010:  LOAD  (1)   3[LB]
0011:  CALL  (CB)  32756[CB]	printInt
0012:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/onwTests/_4_2/foreach3.mavl
src/test/testcases/executables/P3/onwTests/_4_2/foreach3.txt
Compiling file src/test/testcases/executables/P3/onwTests/_4_2/foreach3.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  PUSH        3
0002:  LOADL       1
0003:  LOADL       1
0004:  LOADL       1
0005:  add
0006:  LOADL       3
0007:  LOADA       2[LB]
0008:  STOREI(3)   
0009:  LOAD  (3)   2[LB]
000A:  LOADL       2
000B:  LOADL       0
000C:  LOAD  (1)   -1[ST]
000D:  LOADA       -6[ST]
000E:  add
000F:  LOADI (1)   
0010:  LOAD  (1)   -3[ST]
0011:  add
0012:  LOAD  (1)   -2[ST]
0013:  LOADA       -7[ST]
0014:  add
0015:  STOREI(1)   
0016:  LOAD  (1)   -1[ST]
0017:  LOADL       1
0018:  add
0019:  STORE (1)   -2[ST]
001A:  LOAD  (1)   -1[ST]
001B:  LOADL       3
001C:  le
001D:  JUMPIF(1)   12[CB]
001E:  POP   (0)   2
001F:  LOADA       -3[ST]
0020:  LOADI (1)   
0021:  LOADA       0[LB]
0022:  STOREI(1)   
0023:  LOAD  (1)   0[LB]
0024:  CALL  (CB)  32756[CB]	printInt
0025:  POP   (0)   0
0026:  LOADA       -2[ST]
0027:  LOADI (1)   
0028:  LOADA       0[LB]
0029:  STOREI(1)   
002A:  LOAD  (1)   0[LB]
002B:  CALL  (CB)  32756[CB]	printInt
002C:  POP   (0)   0
002D:  LOADA       -1[ST]
002E:  LOADI (1)   
002F:  LOADA       0[LB]
0030:  STOREI(1)   
0031:  LOAD  (1)   0[LB]
0032:  CALL  (CB)  32756[CB]	printInt
0033:  POP   (0)   0
0034:  POP   (0)   3
0035:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/onwTests/_4_1/Switchcase3.mavl
src/test/testcases/executables/P3/onwTests/_4_1/Switchcase3.txt
Compiling file src/test/testcases/executables/P3/onwTests/_4_1/Switchcase3.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  LOADL       9
0002:  PUSH        1
0003:  LOAD  (1)   2[LB]
0004:  LOADL       5
0005:  eq
0006:  JUMPIF(0)   11[CB]
0007:  LOADL       7
0008:  LOADA       3[LB]
0009:  STOREI(1)   
000A:  JUMP        -1[CB]
000B:  LOAD  (1)   2[LB]
000C:  LOADL       4
000D:  eq
000E:  JUMPIF(0)   19[CB]
000F:  LOADL       27
0010:  LOADA       3[LB]
0011:  STOREI(1)   
0012:  JUMP        22[CB]
0013:  LOADL       10
0014:  LOADA       3[LB]
0015:  STOREI(1)   
0016:  LOAD  (1)   3[LB]
0017:  CALL  (CB)  32756[CB]	printInt
0018:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/onwTests/_2/lhs3.mavl
src/test/testcases/executables/P3/onwTests/_2/lhs3.txt
Compiling file src/test/testcases/executables/P3/onwTests/_2/lhs3.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  PUSH        9
0002:  LOADL       4
0003:  LOADL       3
0004:  LOADL       0
0005:  mult
0006:  LOADL       1
0007:  add
0008:  LOADA       2[LB]
0009:  add
000A:  STOREI(1)   
000B:  LOADL       17
000C:  LOADL       3
000D:  LOADL       1
000E:  mult
000F:  LOADL       2
0010:  add
0011:  LOADA       2[LB]
0012:  add
0013:  STOREI(1)   
0014:  LOADL       9
0015:  LOADL       3
0016:  LOADL       2
0017:  mult
0018:  LOADL       2
0019:  add
001A:  LOADA       2[LB]
001B:  add
001C:  STOREI(1)   
001D:  LOAD  (9)   2[LB]
001E:  LOADA       -9[ST]
001F:  LOADL       0
0020:  LOADL       3
0021:  mult
0022:  add
0023:  LOADI (3)   
0024:  POP   (3)   9
0025:  LOADA       -3[ST]
0026:  LOADL       1
0027:  LOADL       1
0028:  mult
0029:  add
002A:  LOADI (1)   
002B:  POP   (1)   3
002C:  CALL  (CB)  32756[CB]	printInt
002D:  LOAD  (9)   2[LB]
002E:  LOADA       -9[ST]
002F:  LOADL       1
0030:  LOADL       3
0031:  mult
0032:  add
0033:  LOADI (3)   
0034:  POP   (3)   9
0035:  LOADA       -3[ST]
0036:  LOADL       2
0037:  LOADL       1
0038:  mult
0039:  add
003A:  LOADI (1)   
003B:  POP   (1)   3
003C:  CALL  (CB)  32756[CB]	printInt
003D:  LOAD  (9)   2[LB]
003E:  LOADA       -9[ST]
003F:  LOADL       2
0040:  LOADL       3
0041:  mult
0042:  add
0043:  LOADI (3)   
0044:  POP   (3)   9
0045:  LOADA       -3[ST]
0046:  LOADL       2
0047:  LOADL       1
0048:  mult
0049:  add
004A:  LOADI (1)   
004B:  POP   (1)   3
004C:  CALL  (CB)  32756[CB]	printInt
004D:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/onwTests/_2/lhs4.mavl
src/test/testcases/executables/P3/onwTests/_2/lhs4.txt
Compiling file src/test/testcases/executables/P3/onwTests/_2/lhs4.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  PUSH        5
0002:  LOADL       1
0003:  LOADL       2
0004:  LOADL       3
0005:  LOADL       4
0006:  LOADL       10
0007:  LOADA       2[LB]
0008:  STOREI(5)   
0009:  LOAD  (5)   2[LB]
000A:  LOADA       -5[ST]
000B:  LOADL       0
000C:  add
000D:  LOADI (4)   
000E:  POP   (4)   5
000F:  LOADA       -4[ST]
0010:  LOADL       0
0011:  LOADL       2
0012:  mult
0013:  add
0014:  LOADI (2)   
0015:  POP   (2)   4
0016:  LOADA       -2[ST]
0017:  LOADL       0
0018:  LOADL       1
0019:  mult
001A:  add
001B:  LOADI (1)   
001C:  POP   (1)   2
001D:  CALL  (CB)  32756[CB]	printInt
001E:  LOAD  (5)   2[LB]
001F:  LOADA       -5[ST]
0020:  LOADL       0
0021:  add
0022:  LOADI (4)   
0023:  POP   (4)   5
0024:  LOADA       -4[ST]
0025:  LOADL       0
0026:  LOADL       2
0027:  mult
0028:  add
0029:  LOADI (2)   
002A:  POP   (2)   4
002B:  LOADA       -2[ST]
002C:  LOADL       1
002D:  LOADL       1
002E:  mult
002F:  add
0030:  LOADI (1)   
0031:  POP   (1)   2
0032:  CALL  (CB)  32756[CB]	printInt
0033:  LOAD  (5)   2[LB]
0034:  LOADA       -5[ST]
0035:  LOADL       0
0036:  add
0037:  LOADI (4)   
0038:  POP   (4)   5
0039:  LOADA       -4[ST]
003A:  LOADL       1
003B:  LOADL       2
003C:  mult
003D:  add
003E:  LOADI (2)   
003F:  POP   (2)   4
0040:  LOADA       -2[ST]
0041:  LOADL       0
0042:  LOADL       1
0043:  mult
0044:  add
0045:  LOADI (1)   
0046:  POP   (1)   2
0047:  CALL  (CB)  32756[CB]	printInt
0048:  LOAD  (5)   2[LB]
0049:  LOADA       -5[ST]
004A:  LOADL       0
004B:  add
004C:  LOADI (4)   
004D:  POP   (4)   5
004E:  LOADA       -4[ST]
004F:  LOADL       1
0050:  LOADL       2
0051:  mult
0052:  add
0053:  LOADI (2)   
0054:  POP   (2)   4
0055:  LOADA       -2[ST]
0056:  LOADL       1
0057:  LOADL       1
0058:  mult
0059:  add
005A:  LOADI (1)   
005B:  POP   (1)   2
005C:  CALL  (CB)  32756[CB]	printInt
005D:  LOAD  (5)   2[LB]
005E:  LOADA       -5[ST]
005F:  LOADL       4
0060:  add
0061:  LOADI (1)   
0062:  POP   (1)   5
0063:  CALL  (CB)  32756[CB]	printInt
0064:  LOADL       42
0065:  LOADA       2[LB]
0066:  LOADL       4
0067:  add
0068:  STOREI(1)   
0069:  LOADL       5
006A:  LOADL       6
006B:  LOADL       7
006C:  LOADL       8
006D:  LOADA       2[LB]
006E:  LOADL       0
006F:  add
0070:  STOREI(4)   
0071:  LOAD  (5)   2[LB]
0072:  LOADA       -5[ST]
0073:  LOADL       4
0074:  add
0075:  LOADI (1)   
0076:  POP   (1)   5
0077:  CALL  (CB)  32756[CB]	printInt
0078:  LOAD  (5)   2[LB]
0079:  LOADA       -5[ST]
007A:  LOADL       0
007B:  add
007C:  LOADI (4)   
007D:  POP   (4)   5
007E:  LOADA       -4[ST]
007F:  LOADL       1
0080:  LOADL       2
0081:  mult
0082:  add
0083:  LOADI (2)   
0084:  POP   (2)   4
0085:  LOADA       -2[ST]
0086:  LOADL       1
0087:  LOADL       1
0088:  mult
0089:  add
008A:  LOADI (1)   
008B:  POP   (1)   2
008C:  CALL  (CB)  32756[CB]	printInt
008D:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/onwTests/_2/lhs5.mavl
src/test/testcases/executables/P3/onwTests/_2/lhs5.txt
Compiling file src/test/testcases/executables/P3/onwTests/_2/lhs5.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  PUSH        3
0002:  LOADL       1
0003:  LOADL       2
0004:  LOADL       3
0005:  LOADA       2[LB]
0006:  STOREI(3)   
0007:  LOAD  (3)   2[LB]
0008:  LOADA       -3[ST]
0009:  LOADL       0
000A:  add
000B:  LOADI (1)   
000C:  POP   (1)   3
000D:  CALL  (CB)  32756[CB]	printInt
000E:  LOAD  (3)   2[LB]
000F:  LOADA       -3[ST]
0010:  LOADL       1
0011:  add
0012:  LOADI (1)   
0013:  POP   (1)   3
0014:  CALL  (CB)  32756[CB]	printInt
0015:  LOAD  (3)   2[LB]
0016:  LOADA       -3[ST]
0017:  LOADL       2
0018:  add
0019:  LOADI (1)   
001A:  POP   (1)   3
001B:  CALL  (CB)  32756[CB]	printInt
001C:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
src/test/testcases/executables/P3/onwTests/_4_3/Select2.mavl
src/test/testcases/executables/P3/onwTests/_4_3/Select2.txt
Compiling file src/test/testcases/executables/P3/onwTests/_4_3/Select2.mavl
.text
0000:  CALL  (CB)  1[CB]	main

# function VOID main()
0001:  PUSH        1
0002:  PUSH        1
0003:  LOADL       5
0004:  LOADL       10
0005:  LOADA       2[LB]
0006:  STOREI(1)   
0007:  LOAD  (1)   2[LB]
0008:  LOAD  (1)   4[LB]
0009:  gt
000A:  JUMPIF(0)   13[CB]
000B:  LOAD  (1)   2[LB]
000C:  JUMP        14[CB]
000D:  LOAD  (1)   4[LB]
000E:  LOADA       3[LB]
000F:  STOREI(1)   
0010:  LOAD  (1)   3[LB]
0011:  CALL  (CB)  32756[CB]	printInt
0012:  HALT  
Done.
********** TAM Interpreter (Java Version 2.1esa3) **********
InputFile: build/test-output/a.tam
OutputFile: build/test-output/output.txt
]]></system-out>
  <system-err><![CDATA[Running testcase foreach2
Executing binary!
Running testcase foreach1
Executing binary!
Running testcase Switchcase2
Executing binary!
Running testcase Switchcase1
Executing binary!
Running testcase recordSelect1
Executing binary!
Running testcase division01
Executing binary!
Running testcase lhs2
Executing binary!
Running testcase lhs1
Executing binary!
Running testcase Select1
Executing binary!
Running testcase foreach3
Executing binary!
Running testcase Switchcase3
Executing binary!
Running testcase lhs3
Executing binary!
Running testcase lhs4
Executing binary!
Running testcase lhs5
Executing binary!
Running testcase Select2
Executing binary!
]]></system-err>
</testsuite>
