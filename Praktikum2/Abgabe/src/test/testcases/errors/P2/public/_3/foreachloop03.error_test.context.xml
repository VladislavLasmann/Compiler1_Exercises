<mavlc.test__wrapper.ErrorTestWrapper>
  <stackTrace>
    <trace>mavlc.Main.main(Main.java:205)</trace>
  </stackTrace>
  <suppressedExceptions class="java.util.Collections$UnmodifiableRandomAccessList" resolves-to="java.util.Collections$UnmodifiableList">
    <c class="list"/>
    <list reference="../c"/>
  </suppressedExceptions>
  <error class="mavlc.error_reporting.ConstantAssignmentError">
    <stackTrace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitForEachLoop(ContextualAnalysis.java:378)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitForEachLoop(ContextualAnalysis.java:100)</trace>
      <trace>mavlc.ast.nodes.statement.ForEachLoop.accept(ForEachLoop.java:94)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitFunction(ContextualAnalysis.java:185)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitFunction(ContextualAnalysis.java:100)</trace>
      <trace>mavlc.ast.nodes.function.Function.accept(Function.java:73)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitModule(ContextualAnalysis.java:137)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitModule(ContextualAnalysis.java:100)</trace>
      <trace>mavlc.ast.nodes.module.Module.accept(Module.java:47)</trace>
      <trace>mavlc.Main.main(Main.java:200)</trace>
    </stackTrace>
    <suppressedExceptions class="java.util.Collections$UnmodifiableRandomAccessList" reference="../../suppressedExceptions"/>
    <message>Error @ for (var INT i : v) {
i = 3;
}
in line 3, column 1: 
Cannot assign to constant value!</message>
    <ref class="forEachLoop">
      <srcLine>3</srcLine>
      <srcColumn>1</srcColumn>
      <iterator>
        <srcLine>3</srcLine>
        <srcColumn>9</srcColumn>
        <type class="intType"/>
        <name>i</name>
        <localBaseOffset>0</localBaseOffset>
        <isVariable>true</isVariable>
      </iterator>
      <struct class="idRef">
        <srcLine>3</srcLine>
        <srcColumn>21</srcColumn>
        <type class="vectorType">
          <elemType class="intType" reference="../../../iterator/type"/>
          <dim>3</dim>
        </type>
        <declaration class="valDef">
          <srcLine>2</srcLine>
          <srcColumn>1</srcColumn>
          <type class="vectorType" reference="../../type"/>
          <name>v</name>
          <localBaseOffset>0</localBaseOffset>
          <value class="structInit">
            <srcLine>2</srcLine>
            <srcColumn>24</srcColumn>
            <type class="vectorType">
              <elemType class="intType" reference="../../../../../iterator/type"/>
              <dim>3</dim>
            </type>
            <elements class="linked-list">
              <intVal>
                <srcLine>2</srcLine>
                <srcColumn>25</srcColumn>
                <val>1</val>
              </intVal>
              <intVal>
                <srcLine>2</srcLine>
                <srcColumn>28</srcColumn>
                <val>2</val>
              </intVal>
              <intVal>
                <srcLine>2</srcLine>
                <srcColumn>31</srcColumn>
                <val>3</val>
              </intVal>
            </elements>
          </value>
        </declaration>
        <idName>v</idName>
      </struct>
      <body class="compoundStmt">
        <srcLine>3</srcLine>
        <srcColumn>24</srcColumn>
        <statements>
          <varAssign>
            <srcLine>4</srcLine>
            <srcColumn>2</srcColumn>
            <identifier>
              <srcLine>4</srcLine>
              <srcColumn>2</srcColumn>
              <name>i</name>
            </identifier>
            <value class="intVal">
              <srcLine>4</srcLine>
              <srcColumn>6</srcColumn>
              <val>3</val>
            </value>
          </varAssign>
        </statements>
      </body>
    </ref>
  </error>
  <onlySyntax>false</onlySyntax>
  <testFile>foreachloop03.mavl</testFile>
</mavlc.test__wrapper.ErrorTestWrapper>