<mavlc.test__wrapper.ErrorTestWrapper>
  <stackTrace>
    <trace>mavlc.Main.main(Main.java:205)</trace>
  </stackTrace>
  <suppressedExceptions class="java.util.Collections$UnmodifiableRandomAccessList" resolves-to="java.util.Collections$UnmodifiableList">
    <c class="list"/>
    <list reference="../c"/>
  </suppressedExceptions>
  <error class="mavlc.error_reporting.TypeError">
    <stackTrace>
      <trace>mavlc.context_analysis.ContextualAnalysis.checkType(ContextualAnalysis.java:120)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitSelectExpression(ContextualAnalysis.java:1011)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitSelectExpression(ContextualAnalysis.java:100)</trace>
      <trace>mavlc.ast.nodes.expression.SelectExpression.accept(SelectExpression.java:67)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitVariableAssignment(ContextualAnalysis.java:250)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitVariableAssignment(ContextualAnalysis.java:100)</trace>
      <trace>mavlc.ast.nodes.statement.VariableAssignment.accept(VariableAssignment.java:51)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitFunction(ContextualAnalysis.java:185)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitFunction(ContextualAnalysis.java:100)</trace>
      <trace>mavlc.ast.nodes.function.Function.accept(Function.java:73)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitModule(ContextualAnalysis.java:137)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitModule(ContextualAnalysis.java:100)</trace>
      <trace>mavlc.ast.nodes.module.Module.accept(Module.java:47)</trace>
      <trace>mavlc.Main.main(Main.java:200)</trace>
    </stackTrace>
    <suppressedExceptions class="java.util.Collections$UnmodifiableRandomAccessList" reference="../../suppressedExceptions"/>
    <message>Type error @ a &gt; d ? b : d in line 8, column 6: 
BOOL does not match INT</message>
    <errorOccur class="select">
      <srcLine>8</srcLine>
      <srcColumn>6</srcColumn>
      <condition class="compare">
        <srcLine>8</srcLine>
        <srcColumn>7</srcColumn>
        <type class="boolType"/>
        <leftOp class="idRef">
          <srcLine>8</srcLine>
          <srcColumn>7</srcColumn>
          <type class="intType"/>
          <declaration class="varDecl">
            <srcLine>2</srcLine>
            <srcColumn>2</srcColumn>
            <type class="intType" reference="../../type"/>
            <name>a</name>
            <localBaseOffset>0</localBaseOffset>
          </declaration>
          <idName>a</idName>
        </leftOp>
        <rightOp class="idRef">
          <srcLine>8</srcLine>
          <srcColumn>9</srcColumn>
          <type class="intType" reference="../../leftOp/type"/>
          <declaration class="valDef">
            <srcLine>5</srcLine>
            <srcColumn>2</srcColumn>
            <type class="intType" reference="../../../leftOp/type"/>
            <name>d</name>
            <localBaseOffset>0</localBaseOffset>
            <value class="intVal">
              <srcLine>5</srcLine>
              <srcColumn>14</srcColumn>
              <val>20</val>
            </value>
          </declaration>
          <idName>d</idName>
        </rightOp>
        <comparator>GREATER</comparator>
      </condition>
      <trueCase class="idRef">
        <srcLine>8</srcLine>
        <srcColumn>14</srcColumn>
        <type class="boolType" reference="../../condition/type"/>
        <declaration class="valDef">
          <srcLine>3</srcLine>
          <srcColumn>2</srcColumn>
          <type class="boolType" reference="../../../condition/type"/>
          <name>b</name>
          <localBaseOffset>0</localBaseOffset>
          <value class="boolVal">
            <srcLine>3</srcLine>
            <srcColumn>15</srcColumn>
            <val>true</val>
          </value>
        </declaration>
        <idName>b</idName>
      </trueCase>
      <falseCase class="idRef">
        <srcLine>8</srcLine>
        <srcColumn>18</srcColumn>
        <type class="intType" reference="../../condition/leftOp/type"/>
        <declaration class="valDef" reference="../../condition/rightOp/declaration"/>
        <idName>d</idName>
      </falseCase>
    </errorOccur>
    <t1 class="boolType" reference="../errorOccur/condition/type"/>
    <t2 class="intType" reference="../errorOccur/condition/leftOp/type"/>
  </error>
  <onlySyntax>false</onlySyntax>
  <testFile>arith02.mavl</testFile>
</mavlc.test__wrapper.ErrorTestWrapper>