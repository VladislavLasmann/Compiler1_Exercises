<mavlc.test__wrapper.ErrorTestWrapper>
  <stackTrace>
    <trace>mavlc.Main.main(Main.java:205)</trace>
  </stackTrace>
  <suppressedExceptions class="java.util.Collections$UnmodifiableRandomAccessList" resolves-to="java.util.Collections$UnmodifiableList">
    <c class="list"/>
    <list reference="../c"/>
  </suppressedExceptions>
  <error class="mavlc.error_reporting.ConstantAssignmentError">
    <stackTrace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitRecordLHSIdentifier(ContextualAnalysis.java:317)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitRecordLHSIdentifier(ContextualAnalysis.java:100)</trace>
      <trace>mavlc.ast.nodes.statement.RecordLHSIdentifier.accept(RecordLHSIdentifier.java:42)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitVariableAssignment(ContextualAnalysis.java:251)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitVariableAssignment(ContextualAnalysis.java:100)</trace>
      <trace>mavlc.ast.nodes.statement.VariableAssignment.accept(VariableAssignment.java:51)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitFunction(ContextualAnalysis.java:185)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitFunction(ContextualAnalysis.java:100)</trace>
      <trace>mavlc.ast.nodes.function.Function.accept(Function.java:73)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitModule(ContextualAnalysis.java:137)</trace>
      <trace>mavlc.context_analysis.ContextualAnalysis.visitModule(ContextualAnalysis.java:100)</trace>
      <trace>mavlc.ast.nodes.module.Module.accept(Module.java:47)</trace>
      <trace>mavlc.Main.main(Main.java:200)</trace>
    </stackTrace>
    <suppressedExceptions class="java.util.Collections$UnmodifiableRandomAccessList" reference="../../suppressedExceptions"/>
    <message>Error @ a@xin line 8, column 4: 
Cannot assign to constant value!</message>
    <ref class="recordId">
      <srcLine>8</srcLine>
      <srcColumn>4</srcColumn>
      <name>a</name>
      <declaration class="varDecl">
        <srcLine>6</srcLine>
        <srcColumn>4</srcColumn>
        <type class="recordType">
          <name>foo</name>
          <declaration>
            <srcLine>1</srcLine>
            <srcColumn>0</srcColumn>
            <name>foo</name>
            <elements>
              <recordElementDeclaration>
                <srcLine>2</srcLine>
                <srcColumn>1</srcColumn>
                <type class="intType"/>
                <name>x</name>
                <localBaseOffset>0</localBaseOffset>
                <isVariable>false</isVariable>
              </recordElementDeclaration>
            </elements>
          </declaration>
        </type>
        <name>a</name>
        <localBaseOffset>0</localBaseOffset>
      </declaration>
      <elementName>x</elementName>
    </ref>
  </error>
  <onlySyntax>false</onlySyntax>
  <testFile>assign04.mavl</testFile>
</mavlc.test__wrapper.ErrorTestWrapper>